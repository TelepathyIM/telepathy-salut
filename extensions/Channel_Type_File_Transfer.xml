<?xml version="1.0" ?>
<node name="/Channel_Type_File_Transfer" xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0">
  <tp:copyright>
    Copyright (C) 2007 Collabora Limited
  </tp:copyright>
  <tp:license>
    This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Library General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
  </tp:license>
  <interface name="org.freedesktop.Telepathy.Channel.Type.FileTransfer" tp:name-const="CHANNEL_TYPE_FILE_TRANSFER">
    <tp:requires interface="org.freedesktop.Telepathy.Channel"/>
    <tp:docstring>
      A channel type for offering and receiving files.
      The actual transmission of the data is done by reading or writing 
      a local Unix socket.
      
      The FileTransfer channel type may be requested for handles of type
      HANDLE_TYPE_CONTACT and HANDLE_TYPE_ROOM.
      TODO: Is sending to multiple persons implemented in anything?
    </tp:docstring>

    <tp:enum name="FileTransfer_State">
      <tp:enumvalue suffix="LocalPending" value="0">
        <tp:docstring>
          The file transfer is waiting to be accepted/closed locally.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="RemotePending" value="1">
        <tp:docstring>
          The file transfer is waiting to be accepted/closed remotely.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Open" value="2">
        <tp:docstring>
          The file transfer is open for traffic.
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>

    <tp:enum name="FileTransfer_Direction">
      <tp:enumvalue suffix="Incoming" value="0">
        <tp:docstring>
          The file transfer is for an incoming file, i.e. a file offered
          to this client.
        </tp:docstring>
      </tp:enumvalue>
      <tp:enumvalue suffix="Outgoing" value="1">
        <tp:docstring>
          The file transfer is for an outgoing file, i.e. a file offered
          by this client.
        </tp:docstring>
      </tp:enumvalue>
    </tp:enum>


    <method name="ListFileTransfers">
      <arg direction="out" type="a(uuuusa{sv})">
        <tp:docstring>
         Return an array of tuples, each representing a file transfer, with the
         following members:

         <ul>
           <li>the file transfer's ID</li>
           <li>the file transfer's initiator</li>
           <li>the file transfer's direction, as described by the 
               FileTransfer_Direction enum</li>
           <li>the file transfer's state</li>
           <li>the file's friendly filename, for displaying</li>
           <li>the file's additional information</li>
         </ul>
        </tp:docstring>
      </arg>
    </method>

    <method name="OfferFile">
      <tp:docstring>
        Offers a file for transmission.
      </tp:docstring>
      <arg direction="in" name="filename" type="s">
        <tp:docstring>
          The filename of the file that is to be transmitted, for displaying.
        </tp:docstring>
      </arg>
      <arg direction="in" name="information" type="a{sv}">
        <tp:docstring>
          A dictionary of additional information about the file.
          Common keys:
          TODO
        </tp:docstring>
      </arg>
      <arg direction="out" type="u">
        <tp:docstring>
          The ID of the new file transfer.
        </tp:docstring>
      </arg>
    </method>

    <signal name="NewFileTransfer">
      <tp:docstring>
        Emitted when a file transfer is created.
      </tp:docstring>
      <arg name="id" type="u">
        <tp:docstring>
          The ID of the new file transfer.
        </tp:docstring>
      </arg>
      <arg name="initiator" type="u">
        <tp:docstring>
          The handle of the contact who initiated the file transfer.
        </tp:docstring>
      </arg>
      <arg name="direction" type="u">
        <tp:docstring>
          The file transfer's direction, as described by the 
          FileTransfer_Direction enum.
        </tp:docstring>
      </arg>
      <arg name="filename" type="s">
        <tp:docstring>
          The filename of the file that is to be transmitted, for displaying.
        </tp:docstring>
      </arg>
      <arg name="information" type="a{sv}">
        <tp:docstring>
          The new file's additional information.
        </tp:docstring>
      </arg>
      <arg name="state" type="u">
        <tp:docstring>
          The new file transfer's state.
        </tp:docstring>
      </arg>
    </signal>

    <method name="AcceptFile">
      <tp:docstring>
        Accept a file transfer that's in the "local pending" state. The file 
        transfer becomes open after this method is called.
      </tp:docstring>
      <arg direction="in" name="id" type="u">
        <tp:docstring>
          The ID of the file transfer to accept.
        </tp:docstring>
      </arg>
    </method>

    <signal name="FileTransferStateChanged">
      <tp:docstring>
        Emitted when the state of a file transfer changes.
      </tp:docstring>
      <arg name="id" type="u">
        <tp:docstring>
          The ID of the file transfer that changed state.
        </tp:docstring>
      </arg>
      <arg name="state" type="u">
        <tp:docstring>
          The new state of the file transfer; see the FileTransfer_State enumeration.
        </tp:docstring>
      </arg>
    </signal>

    <method name="CloseFileTransfer">
      <tp:docstring>
        Close a file transfer.
      </tp:docstring>
      <arg direction="in" name="id" type="u">
        <tp:docstring>
          The ID of the file transfer to close.
        </tp:docstring>
      </arg>
    </method>

    <signal name="FileTransferClosed">
      <tp:docstring>
       Emitted when a file transfer has been closed. The ID of a closed file 
       transfer is no longer valid. The ID may later be reused for a new 
       file transfer.
      </tp:docstring>
      <arg name="id" type="u">
        <tp:docstring>
          The ID of the file transfer that was closed.
        </tp:docstring>
      </arg>
    </signal>

    <method name="GetLocalUnixSocketPath">
      <tp:docstring>
        Retreives the path to a local Unix socket, from which to read or write 
        the file contents, depending on the direction of the file transfer.

        Immediately after connecting to the socket, the client must send a 
        single nul byte. This byte may be accompanied by credentials 
        information on some operating systems that use sendmsg() with 
        SCM_CREDS or SCM_CREDENTIALS to pass credentials over UNIX domain 
        sockets.
      </tp:docstring>
      <arg direction="in" name="id" type="u">
        <tp:docstring>
          The ID of the file transfer to get an path for.
        </tp:docstring>
      </arg>
      <arg direction="out" type="s">
        <tp:docstring>
          The Unix socket path.
        </tp:docstring>
      </arg>
      <tp:possible-errors>
        <tp:error name="org.freedesktop.Telepathy.Error.NotAvailable">
          This file transfer is not in the "open" state.
        </tp:error>
      </tp:possible-errors>
    </method>

  </interface>

</node>
<!-- vim:set sw=2 sts=2 et ft=xml: -->
